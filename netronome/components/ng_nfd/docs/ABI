1.0:

Initial version.

2.0:

Report RX offset in the BAR.

3.0:

Fix LSO.

4.0:

Introduce standard metadata format:

Make first word of metadata carry types of the following fields.
Field types are 4bits long.  All field types are standardized
and must go through acceptance process.

Frame will look like this:

  <----  32 bit  ----->
m    field type word
e     data field #2
t     data field #1
a     data field #0
  =====================
       packet data

Field type word contains 8 4bit field types (8 x 4 = 32bit).  If one
wants to prepend a field in FW one has to do:

/* data_start() gives us address to first byte of metadata */

void prepend_field32(u4 type, u32 field)
{
    xwrite prepend[2];

    prepend[1] = field;

    if (Pkt.meta_len) { /* some fields already there */
        prepend[0] = mem_read32(data_start()) << 4 | type;
        Pkt.meta_len += 4;
        Pkt.data_len += 4;
    } else {
        prepend[0] = type;
        Pkt.meta_len += 8;
        Pkt.data_len += 8;
    }

    mem_write32(data_start(), prepend, 2);
}

Note that we allow hash type to be reported inline i.e. we put:
    field_types = (hash_type << 4) | NFP_NET_META_HASH;

That way host sees NFP_NET_META_HASH and can extract the type from text
4bits.

4.1:

Report link speed in the BAR.

4.2:

Add NFP_NET_CFG_RSS_CAP with NFP_NET_CFG_RSS_CAP_HFUNC defined to
enable reporting hash type (CRC32 vs Toeplitz).

4.3:

Add NFP_NET_CFG_CTRL_LSO2, a capabilities and control flag to indicate
that the firmware application is able to use host-supplied L3 and L4 offsets to
speed up LSO packet fixup.  The firmware application is required to sanity
check the values supplied by the host before trusting them.  This option is
incompatible with NFP_NET_CFG_CTRL_TXVLAN because they use the same TX
descriptor bits.

Add NFP_NET_CFG_CTRL_RSS2, a capabilities and control flag to indicate
that the firmware uses the standard metadata format for RSS hash prepends.
This capability should be advertised instead of NFP_NET_CFG_CTRL_RSS
where the standard metadata format is supported.

Add NFP_NET_CFG_CTRL_CSUM_COMPLETE, a capabilities and control flag to
indicate that the firmware is able to calculate the Internet checksum over
the entire L2 payload of a packet.  The checksum is prepended to the packet
using the standard metadata format.

4.4:

Add NFP_NET_CFG_CTRL_LIVE_ADDR, a capabilities and control flag to
indicate that the firmware is able to update the MAC address at any
time, not just as part of the NFP_NET_CFG_CTRL_ENABLE /
NFP_NET_CFG_UPDATE_GEN updates.

NFP_NET_CFG_UPDATE_MACADDR indicates an update to the
MAC address while up.

4.5:

Add general use mailbox area and NFP_NET_CFG_CTRL_CTAG_FILTER, a
capabilities and control flag to indicate that the firmware is able to
filter CTAG or 802.1q frames based on the vid.

5.0:

Advertise _pf##_isl##_net_app_id rtsym to notify host of advanced firmware
capabilities.  Minor ABI versions are as for 4.x ABIs.